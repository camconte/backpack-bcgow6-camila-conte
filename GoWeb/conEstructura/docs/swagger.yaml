definitions:
  handler.request:
    properties:
      code:
        type: string
      colour:
        type: string
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
    type: object
info:
  contact: {}
  description: This API handle products in a file
  title: GoWeb MELI Bootcamp API
  version: "1.0"
paths:
  /products:
    get:
      description: Get products from a file
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: List products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Store a new product in a file
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Product to store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Store products
      tags:
      - Products
  /products/{id}:
    delete:
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete product
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Update product's name, product's price or both
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Name, price or both to update
        in: body
        name: fieldsToUpdate
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update product's name and product's price
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update an entire product of the file
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update products
      tags:
      - Products
swagger: "2.0"
