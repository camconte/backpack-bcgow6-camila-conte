# ---------------------------------------------------------------------------- #
#                                   Clase1-TM                                  #
# ---------------------------------------------------------------------------- #
/* ------------------------------- Ejercicio1 ------------------------------- */
/*Según la temática elegida, genera un JSON que cumpla con las siguientes claves según la temática.
Los productos varían por id, nombre, color, precio, stock, código (alfanumérico), publicado (si-no), fecha de creación.
Los usuarios varían por id, nombre, apellido, email, edad, altura, activo (si-no), fecha de creación.
Las transacciones: id, código de transacción (alfanumérico), moneda, monto, emisor (string), receptor (string), fecha de transacción.
- Dentro de la carpeta go-web crea un archivo temática.json, el nombre tiene que ser el tema elegido, ej: products.json.
- Dentro del mismo escribí un JSON que permita tener un array de productos, usuarios o transacciones con todas sus variantes.
*/
/* ------------------------------- Ejercicio2 ------------------------------- */
/*1.Crea dentro de la carpeta go-web un archivo llamado main.go
2.Crea un servidor web con Gin que te responda un JSON que tenga una clave “message” y diga Hola seguido por tu nombre.
3.Pegale al endpoint para corroborar que la respuesta sea la correcta.
*/
/* ------------------------------- Ejercicio3 ------------------------------- */
/*Ya habiendo creado y probado nuestra API que nos saluda, generamos una ruta que devuelve un listado de la temática elegida.
1. Dentro del “main.go”, crea una estructura según la temática con los campos correspondientes.
2. Genera un endpoint cuya ruta sea /temática (en plural). Ejemplo: “/productos”
3. Genera un handler para el endpoint llamado “GetAll”.
4. Crea una slice de la estructura, luego devuelvela a través de nuestro endpoint.
*/
# ---------------------------------------------------------------------------- #
#                                   Clase1-TT                                  #
# ---------------------------------------------------------------------------- #
/* ------------------------------- Ejercicio1 ------------------------------- */
/*Según la temática elegida, necesitamos agregarles filtros a nuestro endpoint, el mismo se tiene que poder filtrar por todos los campos.
1. Dentro del handler del endpoint, recibí del contexto los valores a filtrar.
2. Luego genera la lógica de filtrado de nuestro array.
3. Devolver por el endpoint el array filtrado. 
*/
# -------------------------------- Ejercicio2 -------------------------------- #
Generar un nuevo endpoint que nos permita traer un solo resultado del array de la temática. Utilizando path parameters el endpoint debería ser /temática/:id (recuerda que siempre tiene que ser en plural la temática). Una vez recibido el id devuelve la posición correspondiente.
1.Genera una nueva ruta.
2.Genera un handler para la ruta creada.
3.Dentro del handler busca el item que necesitas.
4.Devuelve el item según el id.
Si no encontraste ningún elemento con ese id devolver como código de respuesta 404.

# ---------------------------------------------------------------------------- #
#                                   Clase2-TM                                  #
# ---------------------------------------------------------------------------- #
# -------------------------------- Ejercicio1 -------------------------------- #
Se debe implementar la funcionalidad para crear la entidad. pasa eso se deben seguir los
siguientes pasos:
1. Crea un endpoint mediante POST el cual reciba la entidad.
2. Se debe tener un array de la entidad en memoria (a nivel global), en el cual se
deberán ir guardando todas las peticiones que se vayan realizando.
3. Al momento de realizar la petición se debe generar el ID. Para generar el ID se debe
buscar el ID del último registro generado, incrementarlo en 1 y asignarlo a nuestro
nuevo registro (sin tener una variable de último ID a nivel global).
# -------------------------------- Ejercicio2 -------------------------------- #
Se debe implementar las validaciones de los campos al momento de enviar la petición, para
eso se deben seguir los siguientes pasos:
1. Se debe validar todos los campos enviados en la petición, todos los campos son
requeridos
2. En caso que algún campo no esté completo se debe retornar un código de error 400
con el mensaje “el campo %s es requerido”.
(En %s debe ir el nombre del campo que no está completo).
# -------------------------------- Ejercicio3 -------------------------------- #
Para agregar seguridad a la aplicación se debe enviar la petición con un token, para eso se
deben seguir los siguientes pasos::

1. Al momento de enviar la petición se debe validar que un token sea enviado
2. Se debe validar ese token en nuestro código (el token puede estar hardcodeado).
3. En caso que el token enviado no sea correcto debemos retornar un error 401 y un
mensaje que “no tiene permisos para realizar la petición solicitada”.

# ---------------------------------------------------------------------------- #
#                                  Clase 3-TM                                  #
# ---------------------------------------------------------------------------- #
# -------------------------------- Ejercicio1 -------------------------------- #
Se solicita implementar una funcionalidad que modifique completamente una entidad. Para
lograrlo, es necesario, seguir los siguientes pasos:
1. Generar un método PUT para modificar la entidad completa
2. Desde el Path enviar el ID de la entidad que se modificará
3. En caso de no existir, retornar un error 404
4. Realizar todas las validaciones (todos los campos son requeridos)
# -------------------------------- Ejercicio2 -------------------------------- #
Es necesario implementar una funcionalidad para eliminar una entidad. Para lograrlo, es
necesario, seguir los siguientes pasos:
1. Generar un método DELETE para eliminar la entidad en base al ID
2. En caso de no existir, retornar un error 404
# -------------------------------- Ejercicio3 -------------------------------- #
Se requiere implementar una funcionalidad que modifique la entidad parcialmente, solo se
deben modificar 2 campos:
- Si se seleccionó Productos, los campos nombre y precio.
- Si se seleccionó Usuarios, los campos apellido y edad.
- Si se seleccionó Transacciones, los campos código de transacción y monto.
.Para lograrlo, es necesario, seguir los siguientes pasos:
1. Generar un método PATCH para modificar la entidad parcialmente, modificando solo 2
campo (a elección)
2. Desde el Path enviar el ID de la entidad que se modificara
3. En caso de no existir, retornar un error 404

